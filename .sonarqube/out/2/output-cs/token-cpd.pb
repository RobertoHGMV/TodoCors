ø

EC:\Projects\TodoCors\src\Todo.Domain\Commands\GenericCommandResult.cs
	namespace 	
Todo
 
. 
Domain 
. 
Commands 
{ 
public 

class  
GenericCommandResult %
:& '
ICommandResult( 6
{ 
public  
GenericCommandResult #
(# $
)$ %
{& '
}( )
public		  
GenericCommandResult		 #
(		# $
bool		$ (
success		) 0
,		0 1
string		2 8
message		9 @
,		@ A
object		B H
data		I M
)		M N
{

 	
Success 
= 
success 
; 
Message 
= 
message 
; 
Data 
= 
data 
; 
} 	
public 
bool 
Success 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Message 
{ 
get  #
;# $
set% (
;( )
}* +
public 
object 
Data 
{ 
get  
;  !
set" %
;% &
}' (
} 
} “'
HC:\Projects\TodoCors\src\Todo.Domain\Commands\Users\CreateUserCommand.cs
	namespace 	
Todo
 
. 
Domain 
. 
Commands 
. 
Users $
{ 
public		 

class		 
CreateUserCommand		 "
:		# $

Notifiable		% /
,		/ 0
ICommand		1 9
{

 
public 
CreateUserCommand  
(  !
)! "
{# $
}% &
public 
CreateUserCommand  
(  !
string! '
	firstName( 1
,1 2
string3 9
lastName: B
,B C
stringD J
userNameK S
,S T
stringU [
password\ d
,d e
stringf l
confirmPasswordm |
,| }
string	~ „
email
… Š
)
Š ‹
{ 	
	FirstName 
= 
	firstName !
;! "
LastName 
= 
lastName 
;  
UserName 
= 
userName 
;  
Password 
= 
password 
;  
ConfirmPassword 
= 
confirmPassword -
;- .
Email 
= 
email 
; 
} 	
public 
string 
	FirstName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
LastName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
UserName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
ConfirmPassword %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
void 
Validate 
( 
) 
{ 	
IsNullOrEmpty   
(   
	FirstName   #
,  # $
$str  % 0
,  0 1
$str  2 F
)  F G
;  G H
	HasMinLen!! 
(!! 
	FirstName!! 
,!!  
$num!!! "
,!!" #
$str!!$ /
,!!/ 0
$str!!1 V
)!!V W
;!!W X
	HasMaxLen"" 
("" 
	FirstName"" 
,""  
$num""! #
,""# $
$str""% 0
,""0 1
$str""2 W
)""W X
;""X Y
IsNullOrEmpty$$ 
($$ 
LastName$$ "
,$$" #
$str$$$ .
,$$. /
$str$$0 I
)$$I J
;$$J K
	HasMinLen%% 
(%% 
LastName%% 
,%% 
$num%%  !
,%%! "
$str%%# -
,%%- .
$str%%/ Y
)%%Y Z
;%%Z [
	HasMaxLen&& 
(&& 
LastName&& 
,&& 
$num&&  "
,&&" #
$str&&$ .
,&&. /
$str&&0 Z
)&&Z [
;&&[ \
IsNullOrEmpty(( 
((( 
UserName(( "
,((" #
$str(($ .
,((. /
$str((0 J
)((J K
;((K L
	HasMinLen)) 
()) 
UserName)) 
,)) 
$num))  !
,))! "
$str))# -
,))- .
$str))/ ^
)))^ _
;))_ `
	HasMaxLen** 
(** 
UserName** 
,** 
$num**  "
,**" #
$str**$ .
,**. /
$str**0 _
)**_ `
;**` a
IsNullOrEmpty,, 
(,, 
Password,, "
,,," #
$str,,$ .
,,,. /
$str,,0 @
),,@ A
;,,A B
	HasMinLen-- 
(-- 
Password-- 
,-- 
$num--  !
,--! "
$str--# -
,--- .
$str--/ U
)--U V
;--V W
	HasMaxLen.. 
(.. 
Password.. 
,.. 
$num..  "
,.." #
$str..$ .
,... /
$str..0 V
)..V W
;..W X
AreNotEquals00 
(00 
Password00 !
,00! "
ConfirmPassword00# 2
,002 3
$str004 ;
,00; <
$str00= i
)00i j
;00j k
IsInvalidEmail11 
(11 
Email11  
,11  !
$str11" )
,11) *
$str11+ <
)11< =
;11= >
}22 	
}33 
}44 «	
HC:\Projects\TodoCors\src\Todo.Domain\Commands\Users\DeleteUserCommand.cs
	namespace 	
Todo
 
. 
Domain 
. 
Commands 
. 
Users $
{ 
public 

class 
DeleteUserCommand "
:# $

Notifiable% /
,/ 0
ICommand1 9
{ 
public 
DeleteUserCommand  
(  !
)! "
{# $
}% &
public

 
DeleteUserCommand

  
(

  !
string

! '
username

( 0
)

0 1
{ 	
UserName 
= 
username 
;  
} 	
public 
string 
UserName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
void 
Validate 
( 
) 
{ 	
IsNullOrEmpty 
( 
UserName "
," #
$str$ .
,. /
$str0 O
)O P
;P Q
} 	
} 
} Ÿ	
EC:\Projects\TodoCors\src\Todo.Domain\Commands\Users\GetUserCommand.cs
	namespace 	
Todo
 
. 
Domain 
. 
Commands 
. 
Users $
{ 
public 

class 
GetUserCommand 
:  !

Notifiable" ,
,, -
ICommand. 6
{ 
public 
GetUserCommand 
( 
) 
{  !
}" #
public

 
GetUserCommand

 
(

 
string

 $
userName

% -
)

- .
{ 	
UserName 
= 
userName 
;  
} 	
public 
string 
UserName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
void 
Validate 
( 
) 
{ 	
IsNullOrEmpty 
( 
UserName "
," #
$str$ .
,. /
$str0 O
)O P
;P Q
} 	
} 
} Ó
KC:\Projects\TodoCors\src\Todo.Domain\Commands\Users\GetUserCommandResult.cs
	namespace 	
Todo
 
. 
Domain 
. 
Commands 
. 
Users $
{ 
public 

class  
GetUserCommandResult %
:& '
ICommandResult( 6
{ 
public  
GetUserCommandResult #
(# $
)$ %
{& '
}( )
public		  
GetUserCommandResult		 #
(		# $
string		$ *
	firstName		+ 4
,		4 5
string		6 <
lastName		= E
,		E F
string		G M
userName		N V
,		V W
string		X ^
email		_ d
)		d e
{

 	
	FirstName 
= 
	firstName !
;! "
LastName 
= 
lastName 
;  
UserName 
= 
userName 
;  
Email 
= 
email 
; 
} 	
public 
string 
	FirstName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
LastName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
UserName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
} 
} Õ
HC:\Projects\TodoCors\src\Todo.Domain\Commands\Users\UpdateUserCommand.cs
	namespace 	
Todo
 
. 
Domain 
. 
Commands 
. 
Users $
{ 
public 

class 
UpdateUserCommand "
:# $

Notifiable% /
,/ 0
ICommand1 9
{ 
public 
UpdateUserCommand  
(  !
)! "
{# $
}% &
public

 
UpdateUserCommand

  
(

  !
string

! '
userName

( 0
,

0 1
string

2 8
	firstName

9 B
,

B C
string

D J
lastName

K S
,

S T
string

U [
email

\ a
)

a b
{ 	
UserName 
= 
userName 
;  
	FirstName 
= 
	firstName !
;! "
LastName 
= 
lastName 
;  
Email 
= 
email 
; 
} 	
public 
string 
UserName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
	FirstName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
LastName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
void 
Validate 
( 
) 
{ 	
IsNullOrEmpty 
( 
UserName "
," #
$str$ .
,. /
$str0 J
)J K
;K L
IsNullOrEmpty 
( 
	FirstName #
,# $
$str% 0
,0 1
$str2 F
)F G
;G H
	HasMinLen 
( 
	FirstName 
,  
$num! "
," #
$str$ /
,/ 0
$str1 V
)V W
;W X
	HasMaxLen 
( 
	FirstName 
,  
$num! #
,# $
$str% 0
,0 1
$str2 W
)W X
;X Y
IsNullOrEmpty 
( 
LastName "
," #
$str$ .
,. /
$str0 I
)I J
;J K
	HasMinLen   
(   
LastName   
,   
$num    !
,  ! "
$str  # -
,  - .
$str  / Y
)  Y Z
;  Z [
	HasMaxLen!! 
(!! 
LastName!! 
,!! 
$num!!  "
,!!" #
$str!!$ .
,!!. /
$str!!0 Z
)!!Z [
;!![ \
IsInvalidEmail## 
(## 
Email##  
,##  !
$str##" )
,##) *
$str##+ <
)##< =
;##= >
}$$ 	
}%% 
}&& ŠC
BC:\Projects\TodoCors\src\Todo.Domain\Handlers\Users\UserHandler.cs
	namespace 	
Todo
 
. 
Domain 
. 
Handlers 
. 
Users $
{ 
public 

class 
UserHandler 
: 
IHandler '
<' (
CreateUserCommand( 9
>9 :
,: ;
IHandler< D
<D E
UpdateUserCommandE V
>V W
,W X
IHandlerY a
<a b
DeleteUserCommandb s
>s t
{ 
private 
readonly 
IUow 
_uow "
;" #
private 
readonly 
IUserRepository (
_repository) 4
;4 5
public 
UserHandler 
( 
IUow 
uow  #
,# $
IUserRepository% 4

repository5 ?
)? @
{ 	
_uow 
= 
uow 
; 
_repository 
= 

repository $
;$ %
} 	
public 
ICommandResult 
Handle $
($ %
CreateUserCommand% 6
command7 >
)> ?
{ 	
command 
. 
Validate 
( 
) 
; 
if 
( 
command 
. 
HasNotifications (
)( )
return 
new  
GenericCommandResult /
(/ 0
false0 5
,5 6
$str7 [
,[ \
command] d
.d e
Notificationse r
)r s
;s t
var 
userTemp 
= 
_repository &
.& '
GetByUserName' 4
(4 5
command5 <
.< =
UserName= E
)E F
;F G
if!! 
(!! 
userTemp!! 
!=!! 
null!!  
)!!  !
return"" 
new""  
GenericCommandResult"" /
(""/ 0
false""0 5
,""5 6
$"""7 9
$str""9 ^
{""^ _
command""_ f
.""f g
UserName""g o
}""o p
"""p q
,""q r
null""s w
)""w x
;""x y
var$$ 
name$$ 
=$$ 
new$$ 
Name$$ 
($$  
command$$  '
.$$' (
	FirstName$$( 1
,$$1 2
command$$3 :
.$$: ;
LastName$$; C
)$$C D
;$$D E
var%% 
login%% 
=%% 
new%% 
Login%% !
(%%! "
command%%" )
.%%) *
UserName%%* 2
,%%2 3
command%%4 ;
.%%; <
Password%%< D
,%%D E
command%%F M
.%%M N
ConfirmPassword%%N ]
)%%] ^
;%%^ _
var&& 
email&& 
=&& 
new&& 
Email&& !
(&&! "
command&&" )
.&&) *
Email&&* /
)&&/ 0
;&&0 1
var'' 
user'' 
='' 
new'' 
User'' 
(''  
name''  $
,''$ %
login''& +
,''+ ,
email''- 2
)''2 3
;''3 4
_repository)) 
.)) 
Add)) 
()) 
user))  
)))  !
;))! "
_uow** 
.** 
Commit** 
(** 
)** 
;** 
return,, 
new,,  
GenericCommandResult,, +
(,,+ ,
true,,, 0
,,,0 1
$str,,2 F
,,,F G#
CreateUserCommandResult,,H _
(,,_ `
user,,` d
),,d e
),,e f
;,,f g
}-- 	
public// 
ICommandResult// 
Handle// $
(//$ %
UpdateUserCommand//% 6
command//7 >
)//> ?
{00 	
command11 
.11 
Validate11 
(11 
)11 
;11 
if33 
(33 
command33 
.33 
HasNotifications33 (
)33( )
return44 
new44  
GenericCommandResult44 /
(44/ 0
false440 5
,445 6
$str447 [
,44[ \
command44] d
.44d e
Notifications44e r
)44r s
;44s t
var66 
user66 
=66 
_repository66 "
.66" #
GetByUserName66# 0
(660 1
command661 8
.668 9
UserName669 A
)66A B
;66B C
if88 
(88 
user88 
is88 
null88 
)88 
return99 
new99  
GenericCommandResult99 /
(99/ 0
false990 5
,995 6
$str997 O
,99O P
command99Q X
.99X Y
Notifications99Y f
)99f g
;99g h
var;; 
name;; 
=;; 
new;; 
Name;; 
(;;  
command;;  '
.;;' (
	FirstName;;( 1
,;;1 2
command;;3 :
.;;: ;
LastName;;; C
);;C D
;;;D E
var<< 
email<< 
=<< 
new<< 
Email<< !
(<<! "
command<<" )
.<<) *
Email<<* /
)<</ 0
;<<0 1
user>> 
.>> 
Update>> 
(>> 
name>> 
,>> 
email>> #
)>># $
;>>$ %
_repository@@ 
.@@ 
Update@@ 
(@@ 
user@@ #
)@@# $
;@@$ %
_uowAA 
.AA 
CommitAA 
(AA 
)AA 
;AA 
returnCC 
newCC  
GenericCommandResultCC +
(CC+ ,
trueCC, 0
,CC0 1
$strCC2 F
,CCF G#
CreateUserCommandResultCCH _
(CC_ `
userCC` d
)CCd e
)CCe f
;CCf g
}DD 	
publicFF 
ICommandResultFF 
HandleFF $
(FF$ %
DeleteUserCommandFF% 6
commandFF7 >
)FF> ?
{GG 	
commandHH 
.HH 
ValidateHH 
(HH 
)HH 
;HH 
ifJJ 
(JJ 
commandJJ 
.JJ 
HasNotificationsJJ (
)JJ( )
returnKK 
newKK  
GenericCommandResultKK /
(KK/ 0
falseKK0 5
,KK5 6
$strKK7 \
,KK\ ]
commandKK^ e
.KKe f
NotificationsKKf s
)KKs t
;KKt u
varMM 
userMM 
=MM 
_repositoryMM "
.MM" #
GetByUserNameMM# 0
(MM0 1
commandMM1 8
.MM8 9
UserNameMM9 A
)MMA B
;MMB C
ifOO 
(OO 
userOO 
isOO 
nullOO 
)OO 
returnPP 
newPP  
GenericCommandResultPP /
(PP/ 0
falsePP0 5
,PP5 6
$strPP7 O
,PPO P
commandPPQ X
.PPX Y
NotificationsPPY f
)PPf g
;PPg h
_repositoryRR 
.RR 
RemoveRR 
(RR 
userRR #
)RR# $
;RR$ %
_uowSS 
.SS 
CommitSS 
(SS 
)SS 
;SS 
returnUU 
newUU  
GenericCommandResultUU +
(UU+ ,
trueUU, 0
,UU0 1
$strUU2 S
,UUS T
nullUUU Y
)UUY Z
;UUZ [
}VV 	
privateXX  
GetUserCommandResultXX $#
CreateUserCommandResultXX% <
(XX< =
UserXX= A
userXXB F
)XXF G
{YY 	
returnZZ 
newZZ  
GetUserCommandResultZZ +
(ZZ+ ,
userZZ, 0
.ZZ0 1
NameZZ1 5
.ZZ5 6
	FirstNameZZ6 ?
,ZZ? @
userZZA E
.ZZE F
NameZZF J
.ZZJ K
LastNameZZK S
,ZZS T
userZZU Y
.ZZY Z
LoginZZZ _
.ZZ_ `
UserNameZZ` h
,ZZh i
userZZj n
.ZZn o
EmailZZo t
.ZZt u
AddressZZu |
)ZZ| }
;ZZ} ~
}[[ 	
}\\ 
}]] ›
9C:\Projects\TodoCors\src\Todo.Domain\Models\Users\User.cs
	namespace 	
Todo
 
. 
Domain 
. 
Models 
. 
Users "
{ 
public 

class 
User 
{		 
public

 
User

 
(

 
Name

 
name

 
,

 
Login

 $
login

% *
,

* +
Email

, 1
email

2 7
)

7 8
{ 	
Id 
= 
Guid 
. 
NewGuid 
( 
) 
.  
ToString  (
(( )
)) *
.* +
	Substring+ 4
(4 5
$num5 6
,6 7
$num8 :
): ;
;; <
Name 
= 
name 
; 
Login 
= 
login 
; 
Email 
= 
email 
; 
} 	
	protected 
User 
( 
) 
{ 
} 
public 
string 
Id 
{ 
get 
; 
private  '
set( +
;+ ,
}- .
public 
Name 
Name 
{ 
get 
; 
private  '
set( +
;+ ,
}- .
public 
Login 
Login 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public 
Email 
Email 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public 
void 
Update 
( 
Name 
name  $
,$ %
Email& +
email, 1
)1 2
{ 	
Name 
= 
name 
; 
Email 
= 
email 
; 
} 	
} 
} Ç
?C:\Projects\TodoCors\src\Todo.Domain\Queries\Users\UserQuery.cs
	namespace 	
Todo
 
. 
Domain 
. 
Queries 
. 
Users #
{ 
public 

class 
	UserQuery 
{ 
public		 
static		 

Expression		  
<		  !
Func		! %
<		% &
User		& *
,		* +
bool		, 0
>		0 1
>		1 2
GetByUserName		3 @
(		@ A
string		A G
userName		H P
)		P Q
{

 	
return 
x 
=> 
x 
. 
Login 
.  
UserName  (
==) +
userName, 4
;4 5
} 	
} 
} ö
9C:\Projects\TodoCors\src\Todo.Domain\Repositories\IUow.cs
	namespace 	
Todo
 
. 
Domain 
. 
Repositories "
{ 
public 

	interface 
IUow 
{ 
void 
Commit 
( 
) 
; 
} 
} £
DC:\Projects\TodoCors\src\Todo.Domain\Repositories\IUserRepository.cs
	namespace 	
Todo
 
. 
Domain 
. 
Repositories "
{ 
public 

	interface 
IUserRepository $
{ 
IList 
< 
User 
> 
GetAll 
( 
) 
; 
User		 
GetByUserName		 
(		 
string		 !
userName		" *
)		* +
;		+ ,
void

 
Add

 
(

 
User

 
user

 
)

 
;

 
void 
Update 
( 
User 
user 
) 
; 
void 
Remove 
( 
User 
user 
) 
; 
} 
} ¹
CC:\Projects\TodoCors\src\Todo.Domain\ValueObjects\EmailObj\Email.cs
	namespace 	
Todo
 
. 
Domain 
. 
ValueObjects "
." #
EmailObj# +
{ 
public 

class 
Email 
{ 
	protected 
Email 
( 
) 
{ 
} 
public 
Email 
( 
string 
address #
)# $
{ 	
Address		 
=		 
address		 
;		 
}

 	
public 
string 
Address 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
} 
} «
CC:\Projects\TodoCors\src\Todo.Domain\ValueObjects\LoginObj\Login.cs
	namespace 	
Todo
 
. 
Domain 
. 
ValueObjects "
." #
LoginObj# +
{ 
public 

class 
Login 
{ 
	protected 
Login 
( 
) 
{ 
} 
public 
Login 
( 
string 
userName $
,$ %
string& ,
password- 5
,5 6
string7 =
confirmPassword> M
)M N
{ 	
UserName		 
=		 
userName		 
?		  
.		  !
ToLower		! (
(		( )
)		) *
.		* +
Trim		+ /
(		/ 0
)		0 1
??		2 4
string		5 ;
.		; <
Empty		< A
;		A B
Password

 
=

 
password

 
?

  
.

  !
Trim

! %
(

% &
)

& '
??

( *
string

+ 1
.

1 2
Empty

2 7
;

7 8
ConfirmPassword 
= 
confirmPassword -
?- .
.. /
Trim/ 3
(3 4
)4 5
??6 8
string9 ?
.? @
Empty@ E
;E F
} 	
public 
string 
UserName 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
public 
string 
Password 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
public 
string 
ConfirmPassword %
{& '
get( +
;+ ,
private- 4
set5 8
;8 9
}: ;
public 
bool 
Authenticate  
(  !
string! '
userName( 0
,0 1
string2 8
password9 A
)A B
{ 	
return 
UserName 
. 
Equals "
(" #
userName# +
)+ ,
&&- /
Password0 8
.8 9
Equals9 ?
(? @
password@ H
)H I
;I J
} 	
} 
} š
AC:\Projects\TodoCors\src\Todo.Domain\ValueObjects\NameObj\Name.cs
	namespace 	
Todo
 
. 
Domain 
. 
ValueObjects "
." #
NameObj# *
{ 
public 

class 
Name 
{ 
	protected 
Name 
( 
) 
{ 
} 
public 
Name 
( 
string 
	firstName $
,$ %
string& ,
lastName- 5
)5 6
{ 	
	FirstName		 
=		 
	firstName		 !
;		! "
LastName

 
=

 
lastName

 
;

  
} 	
public 
string 
	FirstName 
{  !
get" %
;% &
private' .
set/ 2
;2 3
}4 5
public 
string 
LastName 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
public 
override 
string 
ToString '
(' (
)( )
=>* ,
$"- /
{/ 0
	FirstName0 9
}9 :
$str: ;
{; <
LastName< D
}D E
"E F
;F G
} 
} 